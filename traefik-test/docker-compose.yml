# version: "3.4"
# services:
#   proxy:
#     image: traefik:v2.0
#     container_name: proxy
#     restart: always
#     command:
#       - "--providers.docker=true"
#       - "--providers.docker.exposedbydefault=false"
#       - "--entrypoints.web.address=:80"
#       - "--entrypoints.websecure.address=:443"
#       - "--certificatesresolvers.lech.acme.tlschallenge=true"
#       - "--certificatesresolvers.lech.acme.email=olegteravolt@gmail.com"
#       - "--certificatesresolvers.lech.acme.storage=/letsencrypt/acme.json"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.https-redirect.entrypoints=web"
#       - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
#       - "traefik.http.routers.https-redirect.middlewares=https-redirect"
#       - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
#     ports:
#       - "443:443"
#       - "80:80"
#     volumes:
#       - proxy-data:/letsencrypt
#       - /var/run/docker.sock:/var/run/docker.sock:ro
  
#   dokuwiki:
#     image: linuxserver/dokuwiki
#     container_name: dokuwiki
#     restart: always
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.dokuwiki.rule=Host(`radicalsubject.space`)"
#       - "traefik.http.routers.dokuwiki.entrypoints=websecure"
#       - "traefik.http.routers.dokuwiki.tls.certresolver=lech"
#     environment:
#       - PUID=1000
#       - PGID=1000
#       - TZ=Europe/Moscow
#     volumes:
#       - dokuwiki-data:/config

# volumes:
#   proxy-data:
#   dokuwiki-data:


version: '3.4'

services:
  
  traefik:
    # The official v2.0 Traefik docker image
    image: traefik:v2.0
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.whatever.localhost`)"
      